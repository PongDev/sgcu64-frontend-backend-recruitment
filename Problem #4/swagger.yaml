swagger: "2.0"
info:
  description: "Employee Management System For HR."
  version: "1.0.0"
  title: "Employee Management System"
host: "www.example.com"
basePath: "/api"
tags:
- name: "user"
  description: "All action about user"
schemes:
- "https"
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "Add new user to database"
      description: ""
      operationId: "addUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User Object To Add"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "201":
          description: "Add User Success"
        "400":
          description: "Invalid Input"
        "401":
          description: "Unauthorized"
      security:
      - APIKeyHeader: []
    get:
      tags:
      - "user"
      summary: "Get all user data"
      description: ""
      operationId: "getAllUser"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Get All User Data Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/UserData"
        "401":
          description: "Unauthorized"
      security:
      - APIKeyHeader: []
  /user/data:
    get:
      tags:
      - "user"
      summary: "Get current login user data"
      description: ""
      operationId: "getCurrentUserData"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Get Current Login User Data Success"
          schema:
            $ref: "#/definitions/UserData"
        "401":
          description: "Unauthorized"
      security:
      - APIKeyHeader: []
  /user/{id}:
    get:
      tags:
      - "user"
      summary: "Get user by id"
      description: ""
      operationId: "getUserByID"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID To Find User Data"
        required: true
        type: "string"
      responses:
        "200":
          description: "Get User Success"
          schema:
            $ref: "#/definitions/UserData"
        "401":
          description: "Unauthorized"
        "404":
          description: "User Not Found"
      security:
      - APIKeyHeader: []
    put:
      tags:
      - "user"
      summary: "Update user by id"
      description: ""
      operationId: "updateUser"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "User ID To Update"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "User Data To Update"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "Update User Success"
        "401":
          description: "Unauthorized"
        "404":
          description: "User Not Found"
      security:
      - APIKeyHeader: []
    delete:
      tags:
      - "user"
      summary: "Delete user"
      description: ""
      operationId: "deleteUser"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "User ID To Delete"
        required: true
        type: "string"
      responses:
        "200":
          description: "Delete User Success"
        "401":
          description: "Unauthorized"
        "404":
          description: "User Not Found"
      security:
      - APIKeyHeader: []
  /user/search:
    get:
      tags:
      - "user"
      summary: "Search user by name, surname or role"
      description: ""
      operationId: "searchUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User Search Data"
        required: true
        schema:
          $ref: "#/definitions/UserSearch"
      responses:
        "200":
          description: "Get User Data List Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/UserData"
        "401":
          description: "Unauthorized"
      security:
      - APIKeyHeader: []
  /user/login:
    post:
      tags:
      - "user"
      summary: "User login"
      description: ""
      operationId: "userLogin"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "User ID To Login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "User Password To Login"
        required: true
        type: "string"
      responses:
        "200":
          description: "Login Success"
          schema:
            type: "string"
          headers:
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "API Key Expire Date"
        "400":
          description: "Invalid ID Or Password"
  /user/logout:
    get:
      tags:
      - "user"
      summary: "User Logout"
      description: ""
      operationId: "userLogout"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Logout Success"
        "401":
          description: "Unauthorized"
      security:
      - APIKeyHeader: []
  /user/changepassword:
    put:
      tags:
      - "user"
      summary: "Update User Password"
      description: ""
      operationId: "changePassword"
      produces:
      - "application/json"
      parameters:
      - name: "current_password"
        in: "query"
        description: "User Current Password"
        required: true
        type: "string"
      - name: "new_password"
        in: "query"
        description: "User New Password"
        required: true
        type: "string"
      responses:
        "200":
          description: "Change User Password Success"
        "400":
          description: "Wrong Password"
        "401":
          description: "Unauthorized"
      security:
      - APIKeyHeader: []
securityDefinitions:
  APIKeyHeader:
    type: "apiKey"
    name: "X-API-Key"
    in: "header"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "string"
      password:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      salary:
        type: "number"
      role:
        type: "string"
  UserData:
    type: "object"
    properties:
      id:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      salary:
        type: "number"
      role:
        type: "string"
  UserSearch:
    type: "object"
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
      role:
        type: "string"